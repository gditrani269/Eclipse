
package VerifInfo.BG;

import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.io.*;

import java.lang.System;


public class verifInfoMain {

	/**
	 * @param args
	 * @throws Exception 
	 */
	public static void main(String[] args) throws Exception {
		// TODO Auto-generated method stub
	System.out.println("Iniciando verificacion de datos");
	System.out.println("ID SOA a verificar: " + args [0]);
	
// -----------------------------------
	
    String sUriOriginal = null;
    File archivo = null;
    FileReader fr = null;
    BufferedReader br = null;
  
    
// -----------------------------------	baja de SPS la ficha de una operacion por ID SOA -----------------------------------------
    
    int iIDSOA = Integer.parseInt(args [0]);
    String targetURL = "http://ecc.bancogalicia.com.ar/sites/ac/soa/_api/web/lists/getbytitle('Operaciones%20Corporativas')/items("+args [0]+")";
    System.out.println (targetURL);
    try {
    		FileWriter fichero = null;
    		PrintWriter pw = null;
    		fichero = new FileWriter("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\OperacionesCorporativas1711.xml");
    		pw = new PrintWriter(fichero);
    		URL restServiceURL = new URL(targetURL);
    		HttpURLConnection httpConnection = (HttpURLConnection) restServiceURL.openConnection();
    		httpConnection.setRequestMethod("GET");
    		httpConnection.setRequestProperty("Accept", "application/json");
    		if (httpConnection.getResponseCode() != 200) {
    			throw new RuntimeException("HTTP GET Request Failed with Error code : "+ httpConnection.getResponseCode());
    		}
    		BufferedReader responseBuffer = new BufferedReader(new InputStreamReader((httpConnection.getInputStream())));
    		String output;
    		while ((output = responseBuffer.readLine()) != null) {
//              System.out.println(output);
    			pw.println(output);
    		}
    		fichero.close();
    		httpConnection.disconnect();
        } 
        catch (MalformedURLException e) {
        	e.printStackTrace();
        } 
        catch (IOException e) {
        	e.printStackTrace();
        }

    System.out.println ("Analizando XML");
    
 // -----------------------------------	Extrae de la ficha de operacion el link a la pagina con el detalle de la operacion -----------------------------------------
    
    try {
		    archivo = new File ("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\OperacionesCorporativas1711.xml");
		    fr = new FileReader (archivo);
		    br = new BufferedReader(fr);
	
	        // Lectura del fichero
	        String linea;
	        String nombrecambiado;
	//        String sUriOriginal = null;
	        boolean bSectionUri = false;
	
	        while((linea=br.readLine())!=null) {
	        	if (linea.indexOf("d:Ficha_x0020_Completa m:type")!=-1) bSectionUri=true;
	        	if (bSectionUri) {
	        		if (linea.indexOf("d:Url")!=-1) {
	        			String sTmp =  "<d:Url>";
	        			int iBeginFicha = linea.indexOf("d:Ficha_x0020_Completa m:type");
	        			int iBeginURI = linea.indexOf("<d:Url>",iBeginFicha) + sTmp.length();
	        			int iEndURI = linea.indexOf("</d:Url>",iBeginFicha);
	        			sUriOriginal = (String) linea.subSequence(iBeginURI, iEndURI);
	        			sUriOriginal = sUriOriginal.replace("amp;", "");
	        			System.out.println ("URL a la ficha de la operacion extraida: \n" + sUriOriginal);
	        		}
	        	}
	        }

    	}
    catch(Exception e){
        e.printStackTrace();
        System.out.println ("Problema con algun archivo");
        System.exit(1);
        
     }


 // -----------------------------------	en este punto tenemos en sUriOriginal la URI a la pagina con el detalle de la operacion
    
 // -------------------- Se baja la pagina con el detalle de la operacion tecnica

    {
    	// aca conseguiria el html: Page_operacion.html
//    	sUriOriginal = "http://www.google.com/";
	      String results = doHttpUrlConnectionAction(sUriOriginal);
//	      System.out.println(results);

	      
	      
	      try {
	    		FileWriter fichero = null;
	    		PrintWriter pw = null;
	    		fichero = new FileWriter("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\OperacionTecnica1711.xml");
	    		pw = new PrintWriter(fichero);
    			pw.println(results);
	    		fichero.close();
	        } 
	        catch (MalformedURLException e) {
	        	e.printStackTrace();
	        } 
	        catch (IOException e) {
	        	e.printStackTrace();
	        }
	      
	      
	      
	      
	      
	  //      new verifInfoMain();
    }

// -------------------- Se debe extraer de la pagina de la operacion la URI a la pagina con framework y URL del BUS al servicio/operacion 
    
    try {
		    archivo = new File ("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\OperacionTecnica1711.xml");
		    fr = new FileReader (archivo);
		    br = new BufferedReader(fr);
	
	        // Lectura del fichero
	        String linea;
	        String nombrecambiado;
	//        String sUriOriginal = null;
	        boolean bSectionUri = false;
	
	        while((linea=br.readLine())!=null) {
	        	if (linea.indexOf("ListData")!=-1) bSectionUri=true;
	        	if (bSectionUri) {
	        		// consumidores
	        		if (linea.indexOf("Consumidores")!=-1) {
	        			String sTmp =  "Consumidores";
	        			int iBeginURI = linea.indexOf("Consumidores") + sTmp.length() + 3;
	        			int iEndURI = linea.indexOf("Protocolo_x0020__x002f__x0020_Me", iBeginURI);
	        			sUriOriginal = (String) linea.subSequence(iBeginURI, iEndURI);
//	        			sUriOriginal = (String) linea.subSequence(iBeginURI, iBeginURI+3);
//	        			sUriOriginal = sUriOriginal.replace("amp;", "");
	        			System.out.println ("consumidores: " + sUriOriginal);
	        		}

	        		if (linea.indexOf("Nombre_x0020_Funcional_x0020_Ser")!=-1) {
	        			String sTmp =  "Nombre_x0020_Funcional_x0020_Ser";
	        			int iBeginURI = linea.indexOf("Nombre_x0020_Funcional_x0020_Ser") + sTmp.length() + 3;
	        			int iEndURI = linea.indexOf(';', iBeginURI);
	        			sUriOriginal = (String) linea.subSequence(iBeginURI, iEndURI);
//	        			sUriOriginal = (String) linea.subSequence(iBeginURI, iBeginURI+3);
//	        			sUriOriginal = sUriOriginal.replace("amp;", "");
	        			System.out.println ("URL a la ficha del fwk \n" + sUriOriginal);
	        		}
	        		
	        		
	        	}
	        }

    	}
    catch(Exception e){
        e.printStackTrace();
        System.out.println ("Problema con algun archivo");
        System.exit(1);
        
     }

    // -------------------- Se baja la pagina nombre funcional del servicio

    {
    	// aca conseguiria el html: Page_operacion.html
//    	sUriOriginal = "http://www.google.com/";
    	sUriOriginal = "http://ecc.bancogalicia.com.ar/sites/ac/soa/Lists/SC/DispForm.aspx?ID="+sUriOriginal+"&RootFolder=%2A";
	      String results = doHttpUrlConnectionAction(sUriOriginal);
//	      System.out.println(results);

	      
	      
	      try {
	    		FileWriter fichero = null;
	    		PrintWriter pw = null;
	    		fichero = new FileWriter("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\NombreFuncional1711.xml");
	    		pw = new PrintWriter(fichero);
    			pw.println(results);
	    		fichero.close();
	        } 
	        catch (MalformedURLException e) {
	        	e.printStackTrace();
	        } 
	        catch (IOException e) {
	        	e.printStackTrace();
	        }
	      
	      
	      
	      
	      
	  //      new verifInfoMain();
    }

// -------------------- Se debe extraer framework y URL al servicio en el OSB 

 // -------------------- Extraccion del framewor 
    try {
	    archivo = new File ("C:\\Users\\l0646482\\n\\mi_desa\\Eclipse\\cws\\NombreFuncional1711.xml");
	    fr = new FileReader (archivo);
	    br = new BufferedReader(fr);

        // Lectura del fichero
        String linea;
        String nombrecambiado;
//        String sUriOriginal = null;
        boolean bSectionUri = false;

        while((linea=br.readLine())!=null) {
        	if (linea.indexOf("ListData")!=-1) bSectionUri=true;
        	if (bSectionUri) {
        		if (linea.indexOf("Framework_x0020_Aplicativo")!=-1) {
        			String sTmp =  "Framework_x0020_Aplicativo";
        			int iBeginURI = linea.indexOf("Framework_x0020_Aplicativo") + sTmp.length();
        			iBeginURI = linea.indexOf(';', iBeginURI);
        			int iEndURI = linea.indexOf(',', iBeginURI);
        			sUriOriginal = (String) linea.subSequence(iBeginURI + 2, iEndURI - 1);
//        			sUriOriginal = (String) linea.subSequence(iBeginURI, iBeginURI+3);
//        			sUriOriginal = sUriOriginal.replace("amp;", "");
        			System.out.println ("El framework es: " + sUriOriginal);
        		} 
        		
        			//extrae URL de prod
           		if (linea.indexOf("URL_x0020_Producci_x00f3_n")!=-1) {
           			String sTmp =  "URL_x0020_Producci_x00f3_n";
           			int iBeginURI = linea.indexOf("URL_x0020_Producci_x00f3_n") + sTmp.length();
           			iBeginURI = linea.indexOf(',', iBeginURI);
           			int iEndURI = linea.indexOf('"', iBeginURI);
           			sUriOriginal = (String) linea.subSequence(iBeginURI + 1, iEndURI);
//         			sUriOriginal = (String) linea.subSequence(iBeginURI, iBeginURI+3);
//         			sUriOriginal = sUriOriginal.replace("amp;", "");
           			System.out.println ("La URL de prod es:" + sUriOriginal);
           		}
        			

        	}
        }

	}
catch(Exception e){
    e.printStackTrace();
    System.out.println ("Problema con algun archivo");
    System.exit(1);
    
 }
// -------------------- FIN Extraccion del framewor 

 // -----------------------------------	---------------------------------

}
	
	
	  public verifInfoMain()
	  {
	    try
	    {
	      String myUrl = "http://www.google.com/";
	      // if your url can contain weird characters you will want to 
	      // encode it here, something like this:
	      // myUrl = URLEncoder.encode(myUrl, "UTF-8");

	      String results = doHttpUrlConnectionAction(myUrl);
	      System.out.println(results);
	    }
	    catch (Exception e)
	    {
	      // deal with the exception in your "controller"
	    }
	  }
	
	  private static String doHttpUrlConnectionAction(String desiredUrl)
			  throws Exception
			  {
			    URL url = null;
			    BufferedReader reader = null;
			    StringBuilder stringBuilder;

			    try
			    {
			      // create the HttpURLConnection
			      url = new URL(desiredUrl);
			      HttpURLConnection connection = (HttpURLConnection) url.openConnection();
			      
			      // just want to do an HTTP GET here
			      connection.setRequestMethod("GET");
			      
			      // uncomment this if you want to write output to this url
			      //connection.setDoOutput(true);
			      
			      // give it 15 seconds to respond
			      connection.setReadTimeout(15*1000);
			      connection.connect();

			      // read the output from the server
			      reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
			      stringBuilder = new StringBuilder();

			      String line = null;
			      while ((line = reader.readLine()) != null)
			      {
			        stringBuilder.append(line + "\n");
			      }
			      return stringBuilder.toString();
			    }
			    catch (Exception e)
			    {
			      e.printStackTrace();
			      throw e;
			    }
			    finally
			    {
			      // close the reader; this can throw an exception too, so
			      // wrap it in another try/catch block.
			      if (reader != null)
			      {
			        try
			        {
			          reader.close();
			        }
			        catch (IOException ioe)
			        {
			          ioe.printStackTrace();
			        }
			      }
			    }
			  }

}

